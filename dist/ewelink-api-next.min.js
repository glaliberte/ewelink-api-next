!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("axios"),require("crypto"),require("dayjs"),require("ws"),require("bonjour-service"),require("crypto-js"),require("log4js"),require("path")):"function"==typeof define&&define.amd?define(["axios","crypto","dayjs","ws","bonjour-service","crypto-js","log4js","path"],e):(t="undefined"!=typeof globalThis?globalThis:t||self)["ewelink-api-next"]=e(t.axios,t.crypto,t.dayjs,t.WebSocket,t.bonjourService,t.CryptoJS,t.log4js,t.path)}(this,(function(t,e,r,s,o,a,i,n){"use strict";function c(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var d=c(t),h=c(r),u=c(s),p=c(a),l=c(i),g=c(n);const y=(t,e)=>{e.forEach((e=>{Object.getOwnPropertyNames(e.prototype).forEach((r=>{Object.defineProperty(t.prototype,r,Object.getOwnPropertyDescriptor(e.prototype,r)||Object.create(null))}))}))},m=(t=8)=>Math.random().toString(36).slice(-t),f=(t,r,s=!1)=>{let o;return o=s&&"object"==typeof t?Object.keys(t).map((e=>`${e}=${t[e]}`)).join("&"):"object"==typeof t?JSON.stringify(t):t,e.createHmac("sha256",r).update(o).digest("base64")},v=(t,e)=>{const r=d.default.create(t||{baseURL:"",timeout:2e4});return r.interceptors.request.use((t=>(["post","put"].includes(t.method||"")&&t.headers&&(t.headers["Content-Type"]="application/json"),t.headers&&(t.headers["X-CK-Nonce"]=m(),t.headers.Date=String(h.default().valueOf())),e&&e.info("Send request: ",{url:t.url,method:t.method,baseURL:t.baseURL,headers:t.headers,params:t?.params,data:JSON.stringify(t?.data)}),t)),(function(t){return e&&e.error("request was aborted: ",t),Promise.reject(t)})),r.interceptors.response.use((t=>{const r=t.config?.headers?.Date?parseInt(String(h.default().valueOf()))-parseInt(t.config.headers?.Date):null,s=Object.assign({status:t.status,responseTime:r},t.data);return e&&e.info("Response receivedï¼š",JSON.stringify(s)),s}),(function(t){return e&&e.error("Incorrect response received: ",t),Promise.reject(t)})),r};class w{constructor(t){this.endpoint="https://eu-apia.coolkit.cc",this.at="",this.rt="",this.account="",this.userApiKey="",this.setUrl=t=>{this.endpoint=`https://${t}-apia.coolkit.${["cn","test"].includes(t)?"cn":"cc"}`,this.request.defaults.baseURL=this.endpoint},this.setAuthConfigs=(t,e)=>{this.appId=t,this.appSecret=e},t&&(this.logObj=t.logObj,this.request=t.request||v({baseURL:this.endpoint,timeout:2e4},this.logObj),t.appId&&(this.appId=t.appId),t.appSecret&&(this.appSecret=t.appSecret),t.region&&(this.endpoint=`https://${t.region}-apia.coolkit.${["cn","test"].includes(t.region)?"cn":"cc"}`,this.region=t.region,this.request.defaults.baseURL=this.endpoint))}}class A{constructor(t){this.root=t}}y(A,[class{async getRegion(t){const e={countryCode:t.areaCode.replace("+","")};return await this.root.request.get("https://apia.coolkit.cn/v2/utils/get-region",{params:e,headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"",!0)}`}})}},class{async login(t){const e={countryCode:t.areaCode,password:t.password};e[""+(-1!==t.account.indexOf("@")?"email":"phoneNumber")]=t.account,t?.lang&&(e.lang=t.lang);const r=await this.root.request.post("/v2/user/login",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"")}`}});return 200===r.status&&0===r.error&&(this.root.account=t.account,this.root.at=r.data?.at,this.root.rt=r.data?.rt,this.root.userApiKey=r.data?.user?.apikey),r}},class{async register(t){const e={verificationCode:t.code,countryCode:t.areaCode||"+1",password:t.password};e[""+(-1!==t.account.indexOf("@")?"email":"phoneNumber")]=t.account;const r=await this.root.request.post("/v2/user/register",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"")}`}});return 200===r.status&&0===r.error&&(this.root.account=t.account,this.root.at=r.data?.at,this.root.rt=r.data?.rt,this.root.userApiKey=r.data?.user?.apikey),r}},class{async smsLogin(t){const e={countryCode:t.areaCode,phoneNumber:t.phoneNumber,lang:t?.lang||"en",verificationCode:t.code},r=await this.root.request.post("/v2/user/sms-login",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"")}`}});return 200===r.status&&0===r.error&&(this.root.account=t.phoneNumber,this.root.at=r.data?.at,this.root.rt=r.data?.rt,this.root.userApiKey=r.data?.user?.apikey),r}},class{async sendCode(t){const e={register:0,resetPwd:1,logout:3,SMSLogin:4},r={type:t.type||0};return r[""+(-1!==t.account.indexOf("@")?"email":"phoneNumber")]=t.account,"string"==typeof t.type&&t.type in e&&(r.type=e[t.type]),await this.root.request.post("/v2/user/verification-code",r,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(r,this.root.appSecret||"")}`}})}},class{async resetPwd(t){const e={password:t.newPassword};e[""+(-1!==t.account.indexOf("@")?"email":"phoneNumber")]=t.account;const r=await this.root.request.post("/v2/user/reset-pwd",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"")}`}});return 200===r.status&&0===r.error&&(this.root.account=t.account,this.root.at=r.data?.at,this.root.rt=r.data?.rt,this.root.userApiKey=r.data?.user?.apikey),r}},class{async changePwd(t){const e={oldPassword:t?.oldPassword,newPassword:t?.newPassword};return await this.root.request.post("/v2/user/change-pwd",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Bearer ${this.root.at}`}})}},class{async getUserInfo(){return await this.root.request.get("/v2/user/profile",{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Bearer ${this.root.at}`}})}},class{async updateUserInfo(t){return await this.root.request.post("/v2/user/profile",t,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Bearer ${this.root.at}`}})}},class{async refreshToken(t){const e={rt:t.rt||this.root.rt},r=await this.root.request.post("/v2/user/refresh",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Sign ${f(e,this.root.appSecret||"")}`}});return 200===r.status&&0===r.error&&(this.root.at=r.data?.at,this.root.rt=r.data?.rt,this.root.userApiKey=r.data?.user?.apikey),r}},class{async logout(){return await this.root.request.delete("/v2/user/logout",{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Bearer ${this.root.at}`}})}},class{async deleteAccount(t){const e={verificationCode:t.code};return await this.root.request.post("/v2/user/close-account",e,{headers:{"X-CK-Appid":this.root.appId||"",Authorization:`Bearer ${this.root.at}`}})}}]);class q{constructor(t){this.root=t}}y(q,[class{async homePage(t){const e={lang:t?.lang,clientInfo:t?.clientInfo,getUser:t?.getUser,getFamily:t?.getFamily,getThing:t?.getThing,getScene:t?.getScene,getMessage:t?.getMessage};return await this.root.request.post("/v2/homepage",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async addFamily(t){const e={name:t.name,sort:t.sort,roomNameList:t?.roomNameList};return await this.root.request.post("/v2/family",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async addRoom(t){const e={familyid:t.familyId,name:t.name,sort:t.sort};return await this.root.request.post("/v2/family/room",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delFamily(t){const e={id:t.id,deviceFamily:t.deviceFamily,switchFamily:t.switchFamily};return await this.root.request.delete("/v2/family",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delRoom(t){const e={id:t.id};return await this.root.request.delete("/v2/family/room",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getFamily(t){const e={lang:t?.lang};return await this.root.request.get("/v2/family",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setFamily(t){const e={id:t?.id,name:t.newName};return await this.root.request.put("/v2/family",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setRoom(t){const e={id:t.id,name:t.newName};return await this.root.request.put("/v2/family/room",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setThing(t){const e={roomid:t.roomId,oldThingList:t.oldThingList,newThingList:t.newThingList};return await this.root.request.post("/v2/family/room/thing",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async sortRoom(t){const e={familyid:t?.familyId,idList:t.idList};return await this.root.request.post("/v2/family/room/index",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async sortThing(t){const e={familyid:t?.familyId,thingList:t.thingList};return await this.root.request.post("/v2/family/thing/sort",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async switchFamily(t){const e={id:t.id};return await this.root.request.post("/v2/family/current",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}}]);class b{constructor(t){this.root=t}}y(b,[class{async getAllThings(t){const e={lang:t?.lang,familyid:t?.familyId,num:t?.num,beginIndex:t?.beginIndex};return await this.root.request.get("/v2/device/thing",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}async getAllThingsAllPages(t){try{let e=!0,r=-99999,s=[];for(;e;){let o=await this.root.request.get("/v2/device/thing",{params:{lang:t?.lang,familyid:t?.familyId,num:30,beginIndex:r},headers:{Authorization:`Bearer ${this.root.at}`}});0!==o.error?e=!1:(s=s.concat(o.data?.thingList),0===o.data?.thingList.length||s.length>=o.data?.total?e=!1:r=o.data?.thingList[o.data?.thingList.length-1].index)}return{status:200,error:0,msg:"",data:{thingList:s,total:s.length}}}catch(t){return{status:500,error:500,msg:t,data:{thingList:[],total:0}}}}},class{async addDevice(t){const r={name:t?.name||`MyDevice${t.deviceId.slice(-5)}`,deviceid:t.deviceId.toLowerCase(),settings:t?.settings,ifrCode:t?.ifrCode,digest:(s=`${t.deviceId.toLowerCase()}${t.deviceKey}`,e.createHash("sha256").update(s).digest("hex")),chipid:t?.chipId,familyid:t?.familyId,roomid:t?.roomId,sort:t?.sort};var s;return await this.root.request.post("/v2/device/add",r,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async addGroup(t){if(t.deviceidList.length<1||t.deviceidList.length>30)throw new Error("deviceidList length must be between 1 and 30");const e={name:t.name,mainDeviceId:t.mainDeviceId,familyid:t?.familyId,roomid:t?.roomId,sort:t?.sort,deviceidList:t.deviceidList};return await this.root.request.post("/v2/device/group",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async addGSMDevice(t){const e={name:t.name,id:t.id,familyid:t?.familyId,roomid:t?.roomId,sort:t?.sort};return await this.root.request.post("/v2/device/add-gsm",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async coverGroupDeviceList(t){if(t.coverDeviceidList.length<1)throw new Error("addDeviceidList length must be greater than 0");const e={id:t.id,deviceidList:t.coverDeviceidList};return await this.root.request.post("/v2/device/group/update",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delDevice(t){return await this.root.request.delete("/v2/device",{params:{deviceid:t.id},headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delGroup(t){const e={id:t.id};return await this.root.request.delete("/v2/device/group",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delOperationHistory(t){const e={deviceid:t.deviceId};return await this.root.request.delete("/v2/device/history",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async delShare(t){const e={deviceid:t.deviceId,apikey:t.apiKey};return await this.root.request.delete("/v2/device/share",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getGroups(t){const e={lang:t?.lang};return await this.root.request.get("/v2/device/group",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getOperationHistory(t){if(t?.num&&(t?.num<0||t?.num>30))throw new Error("num must be between 0 and 30");const e={deviceid:t?.deviceId,from:t?.from,num:t?.num};return await this.root.request.get("/v2/device/history",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getOTAInfo(t){let e=[];t.deviceInfoList.forEach((t=>{e.push({deviceid:t.deviceId,model:t.model,version:t.version})}));const r={deviceInfoList:e};return await this.root.request.post("/v2/device/ota/query",r,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getThings(t){const e={thingList:t.thingList};return await this.root.request.post("/v2/device/thing",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async getThingStatus(t){"string"==typeof t.type&&(t.type="device"===t.type?1:2);const e={type:t.type||1,id:t.id,params:t?.params};return await this.root.request.get("/v2/device/thing/status",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setAllThingStatus(t){if(t.timeout=t.timeout?t.timeout:0,t.timeout<0||t.timeout>8e3)throw new Error("timeout must be between 0 and 8000");const e={thingList:t.thingList,timeout:t.timeout};return await this.root.request.post("/v2/device/thing/batch-status",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setDeviceTags(t){const e={type:t.type||"replace",deviceid:t.deviceId,tags:t.tags};return await this.root.request.post("/v2/device/tags",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setDeviceInfo(t){const e={name:t?.newName,deviceid:t.deviceId,roomid:t?.newRoomId};return await this.root.request.post("/v2/device/update-info",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setGroup(t){const e={name:t.newName,id:t.id};return await this.root.request.put("/v2/device/group",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setGroupStatus(t){const e={id:t.id,params:t.params};return await this.root.request.post("/v2/device/group/status",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setShare(t){const e={deviceid:t.deviceId,apikey:t.apiKey,permit:t.permit};return await this.root.request.post("/v2/device/share/permit",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async setThingStatus(t){"string"==typeof t.type&&(t.type="device"===t.type?1:2);const e={type:t.type||1,id:t.id,params:t.params};return await this.root.request.post("/v2/device/thing/status",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}},class{async share(t){const e={deviceidList:t.deviceidList,permit:t.permit,comment:t.comment,shareType:t.shareType,user:t.user};return await this.root.request.post("/v2/device/share",e,{headers:{Authorization:`Bearer ${this.root.at}`}})}}]);class S{constructor(t){this.root=t}}y(S,[class{async getMessage(t){const e={lang:t?.familyId,from:t?.from,num:t?.num};return await this.root.request.get("/v2/message/read",{params:e,headers:{Authorization:`Bearer ${this.root.at}`}})}}]);class I{constructor(t){this.root=t}}y(I,[class{async dispatch(t){let e=`https://${t}-dispa.coolkit.${["cn","test","wx"].includes(t)?"cn":"cc"}/dispatch/app`;return"wx"===t&&(e="https://wx-disp.coolkit.cn:8080/dispatch/app"),await this.root.request.get(e,{})}}]);class ${constructor(t){this.root=t}}y($,[class{createLoginUrl(t){const e=h.default().valueOf(),r={clientId:this.root.appId??"",redirectUrl:t.redirectUrl,grantType:t.grantType??"authorization_code",state:t.state,nonce:m(),seq:e.toString(),authorization:f(`${this.root.appId??""}_${e}`,this.root.appSecret??"")};return("https://c2ccdn.coolkit.cc/oauth/index.html?"+Object.keys(r).map((t=>`${t}=${r[t]}`)).join("&")).replace("&auion","&authorization")}},class{async getToken(t){const e={redirectUrl:t.redirectUrl,code:t.code,grantType:t?.grantType??"authorization_code"};return this.root.region=t.region,this.root.setUrl(t.region),await this.root.request.post("/v2/user/oauth/token",e,{headers:{"X-CK-Appid":this.root.appId??"",Authorization:`Sign ${f(e,this.root.appSecret??"")}`}})}}]);let z,O,L;class j{constructor(t){this.root=t,this.getDispatch=async t=>{let e;e=t?.fullUrl?await this.root.request.get(t.fullUrl):t?.region?await this.root.request.get(`https://${t?.region}-dispa.coolkit.${["cn","test"].includes(t?.region)?"cn":"cc"}/dispatch/app`):await this.root.request.get("https://dispa.coolkit.cc/dispatch/app");let{port:r,domain:s,reason:o}=e;if("ok"!==o)throw new Error("Long connection address acquisition failed");return`wss://${s}:${r}/api/ws`},this.createHbTimer=({hb:t=0,hbInterval:e=145}={})=>{if(O&&clearInterval(O),!t)return;let r=Math.ceil(e*(.8+.2*Math.random()));O=setInterval((()=>{if(z.readyState===z.OPEN){this.root.logObj?.info("Send ping: ping");try{z.send("ping")}catch(t){this.root.logObj?.error(t)}}}),1e3*r),this.root.logObj?.info(`A timer for sending heartbeat packets has been created. Time interval: ${r}s`)},this.create=async(t,e,r,s,o)=>{if(t?.fullUrl)z=new u.default(t.fullUrl);else{if(!t?.region)throw new Error("region is required");z=new u.default(await this.getDispatch({region:t.region}))}return z.onopen=()=>{this.root.logObj?.info("WebSocket connection has been established");const r={action:"userOnline",at:t.at||this.root.at||"",apikey:t.userApiKey||this.root.userApiKey||"",appid:t.appId||this.root.appId||"",nonce:m(),userAgent:"app",sequence:(new Date).getTime().toString()};this.root.logObj?.info(`Send userOnline message: ${JSON.stringify(r)}`);try{z?.send(JSON.stringify(r))}catch(t){this.root.logObj?.error(t)}e&&e(z)},z.onclose=()=>{O&&(clearInterval(O),this.root.logObj?.info("WebSocket hbIntervalTimer cleared")),this.root.logObj?.info("WebSocket connection has been closed"),z&&z.close(),r&&r()},z.onerror=t=>{this.root.logObj?.info("WebSocket connection dropped, please reconnect, error: "+t.message),O&&(clearInterval(O),this.root.logObj?.info("WebSocket hbIntervalTimer cleared")),s&&s(t)},z.onmessage=t=>{this.root.logObj?.info("WebSocket response received: "+t.data),"{"===t.data.toString()[0]&&JSON.parse(t.data.toString())?.config&&(this.root.logObj?.info("WebSocket handshake succeeded, creating heartbeat timer"),this.createHbTimer(JSON.parse(t.data.toString())?.config)),o&&o(z,t)},z},this.getUserOnline=async t=>JSON.stringify({action:"userOnline",at:t.at||this.root.at||"",apikey:t.userApiKey||this.root.userApiKey||"",appid:t.appId||this.root.appId||"",nonce:m(),userAgent:t?.userAgent||"app",sequence:(new Date).getTime().toString()}),this.getUpdateState=(t,e,r,s,o)=>{const a={action:r||"update",apikey:o||this.root.userApiKey,deviceid:t,params:e,userAgent:s||"app",nonce:m(),sequence:(new Date).getTime().toString()};return JSON.stringify(a)},this.updateState=(t,e,r,s,o)=>{if(1!==z.readyState)return this.root.logObj?.info("WebSocket is not connected"),null;const a=this.getUpdateState(t,e,r,s,o);this.root.logObj?.info("Send update message:ï¼š"+a);try{z?.send(a)}catch(t){this.root.logObj?.error(t)}}}}var k={WebAPI:class extends w{constructor(){super(...arguments),this.user=new A(this),this.home=new q(this),this.device=new b(this),this.message=new S(this),this.oauth=new $(this),this.other=new I(this)}},Ws:class extends w{constructor(){super(...arguments),this.Connect=new j(this)}},Lan:class{constructor(t){this.selfApikey="",this.zeroconf={switch:async t=>await this.generalRequest({...t,path:"/zeroconf/switch",method:"post"}),switches:async t=>await this.generalRequest({...t,path:"/zeroconf/switches",method:"post"}),dimmable:async t=>await this.generalRequest({...t,path:"/zeroconf/dimmable",method:"post"}),sledOnline:async t=>await this.generalRequest({...t,path:"/zeroconf/sledonline",method:"post"}),startups:async t=>await this.generalRequest({...t,path:"/zeroconf/startups",method:"post"}),pulses:async t=>await this.generalRequest({...t,path:"/zeroconf/pulses",method:"post"}),encrypt:async t=>await this.generalRequest({...t,path:"/zeroconf/encrypt",method:"post"}),password:async t=>await this.generalRequest({...t,path:"/zeroconf/encrypt",method:"post"})},t&&(L=this.logObj=t.logObj,this.request=t.request||v(void 0,this.logObj),this.selfApikey=t.selfApikey)}discovery(t,e="ewelink"){const r=new o.Bonjour;return r.find({type:e},(function(e){L&&L.info("Found an eWeLink mDns server: ",e),t(e)})),r}encrypt(t,e,r){if(!t)return"";return p.default.AES.encrypt(JSON.stringify(t),p.default.enc.Hex.parse(e),{iv:p.default.enc.Base64.parse(r),mode:p.default.mode.CBC,padding:p.default.pad.Pkcs7}).ciphertext.toString(p.default.enc.Base64)}decrypt(t,e,r){return t?JSON.parse(p.default.AES.decrypt(t,p.default.enc.Hex.parse(e),{iv:p.default.enc.Base64.parse(r),mode:p.default.mode.CBC,padding:p.default.pad.Pkcs7}).toString(p.default.enc.Utf8)):{}}getDeviceIpPort(t){if(t&&t?.addresses){const e=(t.addresses||[]).filter((e=>{if(e.length<=32)return{ip:e,port:t.port||8081}}));if(e.length>0)return{ip:e[0],port:t.port||8081}}return{}}async generalRequest(t){if(t.encrypt){if(!t?.iv&&!t?.secretKey)return new Error("iv is required when encrypt is true");t.data=this.encrypt(t.data,t.secretKey||"",t.iv||"")}const e={deviceid:t.deviceId,sequence:(new Date).getTime().toString(),selfApikey:t.selfApikey||this.selfApikey,iv:t.iv,encrypt:t.encrypt,data:t.encrypt?t.data:JSON.stringify(t.data)};try{let r={url:`http://${t.ip}:${t.port}${t.path}`,method:t.method.toLowerCase()};return["post","put","patch","putForm","patchForm","postForm"].includes(t.method.toLowerCase())?r.data=e:r.params=e,await this.request.request(r)}catch(t){throw L&&L.error(t),new Error("Request error, please check the network, or the device not online.")}}},createLogger:(t,e,r)=>(l.default.configure({appenders:{httpLog:{type:"dateFile",filename:r||g.default.join("logs","default.log"),pattern:"yyyy-MM-dd",keepFileExt:!0,alwaysIncludePattern:!0,flags:"a"}},categories:{default:{appenders:["httpLog"],level:e||"debug"}}}),l.default.getLogger(t)),creatRequest:v};return k}));
